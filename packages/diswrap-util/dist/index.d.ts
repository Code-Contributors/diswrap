/// <reference types="node" />
import { AttachmentBuilder, PermissionsBitField, FetchArchivedThreadOptions, FetchedThreadsMore, ThreadManager as THManager, MessageManager as MessageM, FetchedThreads, MessageResolvable, EmojiIdentifierResolvable, MessagePayload, MessageEditOptions, Message, Events as Event, BitField, BitFieldResolvable, PermissionResolvable, BufferResolvable } from 'discord.js';
import { TextInputStyle } from 'discord-api-types/v10';
import { TextInputBuilder } from '@discordjs/builders';
import { Stream } from 'stream';
declare class MessageManager extends MessageM {
    editMessage(message: MessageResolvable, options: string | MessagePayload | MessageEditOptions): Promise<Message<boolean>>;
    deleteMessage(message: MessageResolvable): Promise<void>;
    reactToMessage(message: MessageResolvable, emoji: EmojiIdentifierResolvable): Promise<void>;
    pinMessage(message: MessageResolvable, reason?: string | undefined): Promise<void>;
    unpinMessage(message: MessageResolvable, reason?: string | undefined): Promise<void>;
}
declare class ThreadManager extends THManager {
    fetchActive(cache?: boolean | undefined): Promise<FetchedThreads>;
    fetchArchived(options?: FetchArchivedThreadOptions | undefined, cache?: boolean | undefined): Promise<FetchedThreadsMore>;
}
declare class TextInput extends TextInputBuilder {
    ID(customID: string): this;
    Label(label: string): this;
    Style(style: TextInputStyle): this;
    Required(required?: boolean | undefined): this;
    Placeholder(placeholder: string): this;
    Value(value: string): this;
}
declare class Permissions extends PermissionsBitField {
    addPermision(...bits: BitFieldResolvable<'CreateInstantInvite' | 'KickMembers' | 'BanMembers' | 'Administrator' | 'ManageChannels' | 'ManageGuild' | 'AddReactions' | 'ViewAuditLog' | 'PrioritySpeaker' | 'Stream' | 'ViewChannel' | 'SendMessages' | 'SendTTSMessages' | 'ManageMessages' | 'EmbedLinks' | 'AttachFiles' | 'ReadMessageHistory' | 'MentionEveryone' | 'UseExternalEmojis' | 'ViewGuildInsights' | 'Connect' | 'Speak' | 'MuteMembers' | 'DeafenMembers' | 'MoveMembers' | 'UseVAD' | 'ChangeNickname' | 'ManageNicknames' | 'ManageRoles' | 'ManageWebhooks' | 'ManageEmojisAndStickers' | 'ManageGuildExpressions' | 'UseApplicationCommands' | 'RequestToSpeak' | 'ManageEvents' | 'ManageThreads' | 'CreatePublicThreads' | 'CreatePrivateThreads' | 'UseExternalStickers' | 'SendMessagesInThreads' | 'UseEmbeddedActivities' | 'ModerateMembers' | 'ViewCreatorMonetizationAnalytics' | 'UseSoundboard' | 'UseExternalSounds' | 'SendVoiceMessages', bigint>[]): BitField<'CreateInstantInvite' | 'KickMembers' | 'BanMembers' | 'Administrator' | 'ManageChannels' | 'ManageGuild' | 'AddReactions' | 'ViewAuditLog' | 'PrioritySpeaker' | 'Stream' | 'ViewChannel' | 'SendMessages' | 'SendTTSMessages' | 'ManageMessages' | 'EmbedLinks' | 'AttachFiles' | 'ReadMessageHistory' | 'MentionEveryone' | 'UseExternalEmojis' | 'ViewGuildInsights' | 'Connect' | 'Speak' | 'MuteMembers' | 'DeafenMembers' | 'MoveMembers' | 'UseVAD' | 'ChangeNickname' | 'ManageNicknames' | 'ManageRoles' | 'ManageWebhooks' | 'ManageEmojisAndStickers' | 'ManageGuildExpressions' | 'UseApplicationCommands' | 'RequestToSpeak' | 'ManageEvents' | 'ManageThreads' | 'CreatePublicThreads' | 'CreatePrivateThreads' | 'UseExternalStickers' | 'SendMessagesInThreads' | 'UseEmbeddedActivities' | 'ModerateMembers' | 'ViewCreatorMonetizationAnalytics' | 'UseSoundboard' | 'UseExternalSounds' | 'SendVoiceMessages', bigint>;
    removePermission(...bits: BitFieldResolvable<'CreateInstantInvite' | 'KickMembers' | 'BanMembers' | 'Administrator' | 'ManageChannels' | 'ManageGuild' | 'AddReactions' | 'ViewAuditLog' | 'PrioritySpeaker' | 'Stream' | 'ViewChannel' | 'SendMessages' | 'SendTTSMessages' | 'ManageMessages' | 'EmbedLinks' | 'AttachFiles' | 'ReadMessageHistory' | 'MentionEveryone' | 'UseExternalEmojis' | 'ViewGuildInsights' | 'Connect' | 'Speak' | 'MuteMembers' | 'DeafenMembers' | 'MoveMembers' | 'UseVAD' | 'ChangeNickname' | 'ManageNicknames' | 'ManageRoles' | 'ManageWebhooks' | 'ManageEmojisAndStickers' | 'ManageGuildExpressions' | 'UseApplicationCommands' | 'RequestToSpeak' | 'ManageEvents' | 'ManageThreads' | 'CreatePublicThreads' | 'CreatePrivateThreads' | 'UseExternalStickers' | 'SendMessagesInThreads' | 'UseEmbeddedActivities' | 'ModerateMembers' | 'ViewCreatorMonetizationAnalytics' | 'UseSoundboard' | 'UseExternalSounds' | 'SendVoiceMessages', bigint>[]): BitField<'CreateInstantInvite' | 'KickMembers' | 'BanMembers' | 'Administrator' | 'ManageChannels' | 'ManageGuild' | 'AddReactions' | 'ViewAuditLog' | 'PrioritySpeaker' | 'Stream' | 'ViewChannel' | 'SendMessages' | 'SendTTSMessages' | 'ManageMessages' | 'EmbedLinks' | 'AttachFiles' | 'ReadMessageHistory' | 'MentionEveryone' | 'UseExternalEmojis' | 'ViewGuildInsights' | 'Connect' | 'Speak' | 'MuteMembers' | 'DeafenMembers' | 'MoveMembers' | 'UseVAD' | 'ChangeNickname' | 'ManageNicknames' | 'ManageRoles' | 'ManageWebhooks' | 'ManageEmojisAndStickers' | 'ManageGuildExpressions' | 'UseApplicationCommands' | 'RequestToSpeak' | 'ManageEvents' | 'ManageThreads' | 'CreatePublicThreads' | 'CreatePrivateThreads' | 'UseExternalStickers' | 'SendMessagesInThreads' | 'UseEmbeddedActivities' | 'ModerateMembers' | 'ViewCreatorMonetizationAnalytics' | 'UseSoundboard' | 'UseExternalSounds' | 'SendVoiceMessages', bigint>;
    hasPermissions(permission: PermissionResolvable, checkAdmin?: boolean | undefined): boolean;
    missingPermission(bits: BitFieldResolvable<'CreateInstantInvite' | 'KickMembers' | 'BanMembers' | 'Administrator' | 'ManageChannels' | 'ManageGuild' | 'AddReactions' | 'ViewAuditLog' | 'PrioritySpeaker' | 'Stream' | 'ViewChannel' | 'SendMessages' | 'SendTTSMessages' | 'ManageMessages' | 'EmbedLinks' | 'AttachFiles' | 'ReadMessageHistory' | 'MentionEveryone' | 'UseExternalEmojis' | 'ViewGuildInsights' | 'Connect' | 'Speak' | 'MuteMembers' | 'DeafenMembers' | 'MoveMembers' | 'UseVAD' | 'ChangeNickname' | 'ManageNicknames' | 'ManageRoles' | 'ManageWebhooks' | 'ManageEmojisAndStickers' | 'ManageGuildExpressions' | 'UseApplicationCommands' | 'RequestToSpeak' | 'ManageEvents' | 'ManageThreads' | 'CreatePublicThreads' | 'CreatePrivateThreads' | 'UseExternalStickers' | 'SendMessagesInThreads' | 'UseEmbeddedActivities' | 'ModerateMembers' | 'ViewCreatorMonetizationAnalytics' | 'UseSoundboard' | 'UseExternalSounds' | 'SendVoiceMessages', bigint>, checkAdmin?: boolean | undefined): ('CreateInstantInvite' | 'KickMembers' | 'BanMembers' | 'Administrator' | 'ManageChannels' | 'ManageGuild' | 'AddReactions' | 'ViewAuditLog' | 'PrioritySpeaker' | 'Stream' | 'ViewChannel' | 'SendMessages' | 'SendTTSMessages' | 'ManageMessages' | 'EmbedLinks' | 'AttachFiles' | 'ReadMessageHistory' | 'MentionEveryone' | 'UseExternalEmojis' | 'ViewGuildInsights' | 'Connect' | 'Speak' | 'MuteMembers' | 'DeafenMembers' | 'MoveMembers' | 'UseVAD' | 'ChangeNickname' | 'ManageNicknames' | 'ManageRoles' | 'ManageWebhooks' | 'ManageEmojisAndStickers' | 'ManageGuildExpressions' | 'UseApplicationCommands' | 'RequestToSpeak' | 'ManageEvents' | 'ManageThreads' | 'CreatePublicThreads' | 'CreatePrivateThreads' | 'UseExternalStickers' | 'SendMessagesInThreads' | 'UseEmbeddedActivities' | 'ModerateMembers' | 'ViewCreatorMonetizationAnalytics' | 'UseSoundboard' | 'UseExternalSounds' | 'SendVoiceMessages')[];
    freeze(): Readonly<BitField<'CreateInstantInvite' | 'KickMembers' | 'BanMembers' | 'Administrator' | 'ManageChannels' | 'ManageGuild' | 'AddReactions' | 'ViewAuditLog' | 'PrioritySpeaker' | 'Stream' | 'ViewChannel' | 'SendMessages' | 'SendTTSMessages' | 'ManageMessages' | 'EmbedLinks' | 'AttachFiles' | 'ReadMessageHistory' | 'MentionEveryone' | 'UseExternalEmojis' | 'ViewGuildInsights' | 'Connect' | 'Speak' | 'MuteMembers' | 'DeafenMembers' | 'MoveMembers' | 'UseVAD' | 'ChangeNickname' | 'ManageNicknames' | 'ManageRoles' | 'ManageWebhooks' | 'ManageEmojisAndStickers' | 'ManageGuildExpressions' | 'UseApplicationCommands' | 'RequestToSpeak' | 'ManageEvents' | 'ManageThreads' | 'CreatePublicThreads' | 'CreatePrivateThreads' | 'UseExternalStickers' | 'SendMessagesInThreads' | 'UseEmbeddedActivities' | 'ModerateMembers' | 'ViewCreatorMonetizationAnalytics' | 'UseSoundboard' | 'UseExternalSounds' | 'SendVoiceMessages', bigint>>;
}
declare class Attachment extends AttachmentBuilder {
    Name(name: string): this;
    Description(description: string): this;
    File(attachment: BufferResolvable | Stream, name?: string | undefined): this;
    setSpoiler(spoiler?: boolean | undefined): this;
}
export { Event, MessageManager, ThreadManager, TextInput, Permissions, Attachment };
//# sourceMappingURL=index.d.ts.map